{"version":3,"sources":["App.js","components/Map.js","components/Navbar.js","components/Footer.js","components/Listing.js","serviceWorker.js","index.js"],"names":["map","Map","react_default","a","createElement","id","tabIndex","aria-label","role","aria-describedby","hidden","Component","Navbar","state","showListing","_this2","this","onClick","props","hideListings","onKeyPress","event","keyCode","Footer","Listing","query","filteredNames","_this","venueList","updateQuery","setState","filterVenues","then","markers","marker","setMap","length","createMarkersAndInfoWindows","Promise","resolve","queryChecker","filter","name","venue","toLowerCase","indexOf","arr","flag","forEach","x","activateMarker","eachVenue","index","setCenter","lat","location","lng","window","google","maps","trigger","className","listClass","type","placeholder","value","onChange","target","key","categories","onKeyDown","App","venues","renderListing","selectedMarkerIndex","center","loadMap","loadAPIScript","concat","initMap","makeMarkerIcon","markerColor","MarkerImage","document","getElementById","zoom","styles","featureType","stylers","color","bounds","LatLngBounds","arrayList","infowindow","InfoWindow","defaultIcon","highlightedIcon","newVenue","contentString","distance","toFixed","formattedAddress","join","Marker","position","title","icon","extend","addListener","setContent","open","setAnimation","Animation","BOUNCE","setTimeout","getPosition","setIcon","push","fitBounds","getLocation","parameters","fetch","endPoint","response","json","data","groups","items","catch","error","console","log","components_Navbar","components_Listing","components_Map","components_Footer","url","firstScript","getElementsByTagName","script","src","async","defer","parentNode","insertBefore","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","URL","process","href","origin","addEventListener","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a2351cc6.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { Component } from 'react'\r\nimport './App.css'\r\nimport Map from './components/Map'\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\nimport Listing from './components/Listing';\r\n\r\n\r\n// ***Class begins here***\r\nclass App extends Component {\r\n  \r\n  // State\r\n  state = {\r\n    venues: [],\r\n    location: {lat: 22.5918202, lng: 88.417336},\r\n    showListing: false,\r\n    renderListing: false,\r\n    selectedMarkerIndex: 0,\r\n    center: {}\r\n  }\r\n\r\n  // Invoking function for getting locations from foursquare\r\n  componentDidMount() {\r\n    this.getLocation();\r\n  }\r\n\r\n  \r\n  // Hide venue lists on hamburger click\r\n  hideListings = () => {\r\n    this.setState({\r\n      showListing: !this.state.showListing,\r\n      renderListing: true\r\n    })\r\n  }\r\n  \r\n  // Loads the map with keys\r\n  loadMap = () => {\r\n    let key = 'AIzaSyBEcapmmHV5KKE8xT1jPWiyWVApNnRqMsE';\r\n    loadAPIScript(`https://maps.googleapis.com/maps/api/js?key=${key}&v=3&callback=initMap`);\r\n    window.initMap = this.initMap;\r\n  }\r\n\r\n  // creates a new marker icon\r\n  makeMarkerIcon = markerColor => new window.google.maps.MarkerImage('http://chart.googleapis.com/chart?chst=d_map_spin&chld=0.75|0|' + markerColor + '|40|_|%E2%80%A2')\r\n  \r\n  \r\n  // Initializes map markers and info windows\r\n  initMap = () => {\r\n    map = new window.google.maps.Map(document.getElementById('map'), {\r\n      center: this.state.location,\r\n      zoom: 13,\r\n      styles: [\r\n        {\r\n          \"featureType\": \"landscape.man_made\",\r\n          \"stylers\": [\r\n            {\r\n              \"color\": \"#ffd7d7\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"featureType\": \"landscape.natural\",\r\n          \"stylers\": [\r\n            {\r\n              \"color\": \"#ceffce\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"featureType\": \"poi.park\",\r\n          \"stylers\": [\r\n            {\r\n              \"color\": \"#80ff80\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"featureType\": \"road.arterial\",\r\n          \"stylers\": [\r\n            {\r\n              \"color\": \"#c4c400\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"featureType\": \"road.highway\",\r\n          \"stylers\": [\r\n            {\r\n              \"color\": \"#56a64a\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"featureType\": \"water\",\r\n          \"stylers\": [\r\n            {\r\n              \"color\": \"#00ffff\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    });\r\n    let bounds = new window.google.maps.LatLngBounds();\r\n    this.createMarkersAndInfoWindows(this.state.venues,bounds);\r\n  }\r\n\r\n  createMarkersAndInfoWindows = (arrayList,bounds) => {\r\n    let infowindow = new window.google.maps.InfoWindow();\r\n\r\n    let defaultIcon = this.makeMarkerIcon('FFFFFF');\r\n    let highlightedIcon = this.makeMarkerIcon('FF0000');\r\n\r\n    arrayList.forEach((newVenue,index) => {\r\n      let contentString = `<h3 tabIndex='0'>${newVenue.venue.name}</h3>\r\n      <h4 tabIndex='0'>${newVenue.venue.categories[0].name}, <span class=\"distance\">${(newVenue.venue.location.distance/1000).toFixed(2)}km</span> from you</h4>\r\n      <p tabIndex='0'>${newVenue.venue.location.formattedAddress.join(', ')}</p>`;\r\n      \r\n      let marker = new window.google.maps.Marker({\r\n        position: {lat:newVenue.venue.location.lat,lng:newVenue.venue.location.lng},\r\n        map: map,\r\n        title: newVenue.venue.name,\r\n        icon: defaultIcon\r\n      })\r\n\r\n      if (bounds) {\r\n        bounds.extend(marker.position);\r\n      }\r\n\r\n      marker.addListener('click', () => {\r\n        if (infowindow.marker !== marker) {\r\n          infowindow.marker = marker;\r\n          infowindow.setContent(contentString);\r\n        }\r\n        infowindow.open(map, marker);\r\n\r\n        marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n        setTimeout(() => marker.setAnimation(null), 1000);\r\n\r\n        map.setCenter({lat:marker.getPosition().lat(),lng:marker.getPosition().lng()});\r\n\r\n      });\r\n      \r\n      marker.addListener('mouseover', function () {\r\n        this.setIcon(highlightedIcon);\r\n      });\r\n      marker.addListener('mouseout', function () {\r\n        this.setIcon(defaultIcon);\r\n      });        \r\n\r\n      markers.push(marker);\r\n    })\r\n\r\n    if (bounds) {\r\n      map.fitBounds(bounds);\r\n    }\r\n  }\r\n\r\n  \r\n  // Fetches from the FoursquareAPI all the venues, sets the state, and loads map accordingly\r\n  getLocation = () => {\r\n    const endPoint = 'https://api.foursquare.com/v2/venues/explore?',\r\n      parameters = {\r\n      client_id : 'LDOFR0JEF4ADEFUIESEGAH4QFKA1HB0SW2JJFACNWRVANT5J',\r\n      client_secret : 'VDE3JJTRSTWCXPEAW1V2P3C0AZZEOA5VHV3KXDTT3Y1CMMUY',\r\n      query : 'food',\r\n      ll : `${this.state.location.lat},${this.state.location.lng}`,\r\n      limit: 20,\r\n      v: 20181127\r\n    };\r\n      fetch(endPoint\r\n        +'client_id='+parameters.client_id\r\n        +'&client_secret='+parameters.client_secret\r\n        +'&v='+parameters.v\r\n        +'&ll='+parameters.ll\r\n        +'&query='+parameters.query\r\n        +'&limit='+parameters.limit)\r\n    .then(response => response.json())\r\n    .then(data => this.setState({\r\n      venues: data.response.groups[0].items\r\n    },this.loadMap()))\r\n    .catch(function(error) {\r\n        console.log('Error: '+error);\r\n    });\r\n  }\r\n\r\n  \r\n  // Renders page\r\n  render() {\r\n    return (\r\n      <main role='main' aria-label='Neighbourhood Map'>\r\n        {/* Navbar */}\r\n        <Navbar hideListings={this.hideListings}/>\r\n\r\n        {/* Listings */}\r\n\t\t\t\t\r\n        {this.state.renderListing && \r\n          <Listing\r\n          listClass={this.state.showListing ? 'show-lists' : 'hide-lists'} \r\n          venueList={this.state.venues}\r\n          markers={markers}\r\n          map={map}\r\n          createMarkersAndInfoWindows={this.createMarkersAndInfoWindows}/>\r\n        }\r\n\r\n        {/* Map */}\r\n        <Map/>\r\n        \r\n        {/* Footer */}\r\n        <Footer/>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n// ***End of Class***\r\n\r\nlet map, markers = [];\r\n\r\nconst loadAPIScript = url => {\r\n  let firstScript = window.document.getElementsByTagName('script')[0];\r\n  let script = window.document.createElement('script');\r\n  script.src = url;\r\n  script.async = true;\r\n  script.defer = true;\r\n  firstScript.parentNode.insertBefore(script,firstScript);\r\n}\r\n\r\nexport default App;","import React, {Component} from 'react'\r\nimport '../styles/map.css'\r\n\r\nclass Map extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section id=\"map-container\" tabIndex='2'>\r\n\t\t\t\t<div id=\"map\" aria-label='Map' role='application' aria-describedby='map-motive' tabIndex='0'></div>\r\n\t\t\t\t<div id='map-motive' hidden>Map showing all the nearby restaurants</div>\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Map","import React, {Component} from 'react'\r\nimport '../styles/navbar.css'\r\n\r\nclass Navbar extends Component {\r\n\r\n\tstate = {\r\n\t\tshowListing : false\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<nav>\r\n\t\t\t\t<div id='hamburger' role='button' aria-label='Hamburger menu, click or press enter to engage' aria-describedby='hamburger-function' onClick={() => {\r\n\t\t\t\t\tthis.props.hideListings();\r\n\t\t\t\t}}\r\n\t\t\t\tonKeyPress={(event) => {\r\n\t\t\t\t\tevent.keyCode = 13 ? this.props.hideListings() : '';\r\n\t\t\t\t}}\r\n\t\t\t\ttabIndex='3'>&#9776;</div>\r\n\t\t\t\t<div id='hamburger-function' hidden>Clicking on this hamburger button will open the restaurant list for filtering by name</div>\r\n\t\t\t\t<h1 role='banner' tabIndex='1'>Neighbourhood Map</h1>\r\n\t\t\t</nav>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Navbar","import React, {Component} from 'react'\r\nimport '../styles/footer.css'\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<footer>\r\n\t\t\t\tNeighbourhood Map &copy; 2018\r\n\t\t\t</footer>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Footer","import React, {Component} from 'react'\r\nimport '../styles/listing.css'\r\n\r\nclass Listing extends Component {\r\n\tstate = {\r\n\t\tquery: '',\r\n\t\tfilteredNames: this.props.venueList\r\n\t}\r\n\r\n\tupdateQuery = (query) => {\r\n\t\tthis.setState({\r\n\t\t\tquery:query\r\n\t\t})\r\n\t\tthis.filterVenues(query).then(() => {\r\n\t\t\tthis.props.markers.map(marker => marker.setMap(null));\r\n\t\t\tthis.props.markers.length = 0;\r\n\t\t}).then(() => {\r\n\t\t\tthis.props.createMarkersAndInfoWindows(this.state.filteredNames);\r\n\t\t})\r\n\t}\r\n\r\n\tfilterVenues = (query) => {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tif (query) {\r\n\t\t\t\tif (this.queryChecker(this.state.filteredNames,query)) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tfilteredNames: this.props.venueList.filter(name => name.venue.name.toLowerCase().indexOf(query.toLowerCase()) !== -1)\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tfilteredNames: []\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tfilteredNames: this.props.venueList\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tresolve();\r\n\t\t})\r\n\t}\r\n\r\n\tqueryChecker = (arr,query) => {\r\n\t\tlet flag = false;\r\n\t\tarr.forEach(x => {\r\n\t\t\tif (x.venue.name.toLowerCase().indexOf(query.toLowerCase()) > -1) { flag = true }\r\n\t\t})\r\n\t\treturn flag;\r\n\t}\r\n\r\n\tactivateMarker = (eachVenue,index) => {\r\n\t\tthis.props.map.setCenter({lat:eachVenue.venue.location.lat,lng:eachVenue.venue.location.lng});\r\n\t\twindow.google.maps.event.trigger(this.props.markers[index],'click')\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section id='listing' className={this.props.listClass} tabIndex='4'>\r\n\r\n\t\t\t\t<input type=\"text\"\r\n\t\t\t\tplaceholder=\"Filter Restaurant Names\"\r\n\t\t\t\tid='searchbar'\r\n\t\t\t\tvalue={this.state.query}\r\n\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\tthis.updateQuery(event.target.value)\r\n\t\t\t\t}}\r\n\t\t\t\taria-label='Filter Textbox'\r\n\t\t\t\ttabIndex='0'\r\n\t\t\t\t />\r\n\r\n\t\t\t\t<ul id='venueList'>\r\n\t\t\t\t\t{this.state.filteredNames.map((eachVenue,index) => (\r\n\t\t\t\t\t\t<li key={eachVenue.venue.id} \r\n\t\t\t\t\t\taria-label={'List name for '+eachVenue.venue.name+' '+eachVenue.venue.categories[0].name} \r\n\t\t\t\t\t\tonClick={()=>{\r\n\t\t\t\t\t\t\tthis.activateMarker(eachVenue,index)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonKeyDown={(event)=> {\r\n\t\t\t\t\t\t\tif (event.keyCode === 13) {\r\n\t\t\t\t\t\t\tthis.activateMarker(eachVenue,index)\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttabIndex='0'>{eachVenue.venue.name}</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Listing","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}